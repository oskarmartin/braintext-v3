{"version":3,"sources":["app/_directives/fileupload.component.ts"],"names":[],"mappings":"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","file":"fileupload.component.js","sourcesContent":["import { Component, OnInit, Input, Output, EventEmitter, HostListener } from \"@angular/core\";\nimport { FileService } from \"../_services/file.service\";\n\n@Component({\n    moduleId: module.id,\n    selector: 'app-file-upload',\n    templateUrl: './fileupload.component.html'\n})\n\nexport class FileUploadComponent implements OnInit{\n    errors: Array<string> = [];\n    dragAreaClass: string = 'dragarea';\n    @Input() projectId: number = 0;\n    @Input() sectionId: number = 0;\n    @Input() fileExt: string = \"PDF\";\n    @Input() maxFiles: number = 1;\n    @Input() maxSize: number = 25;\n    @Output() uploadStatus = new EventEmitter();\n\n    constructor(private fileService: FileService){ }\n    ngOnInit(){\n\n    }\n    onFileChange(event){\n        let files = event.target.files;\n        this.saveFiles(files);\n    }\n\n    @HostListener('dragenter', ['$event']) onDragEnter(event){\n        this.dragAreaClass = 'droparea';\n        event.preventDefault();\n    }\n    @HostListener('dragend', ['$event']) onDragEnd(event){\n        this.dragAreaClass = 'dragarea';\n        event.preventDefault();\n    }\n    @HostListener('dragleave', ['$event']) onDragLeave(event){\n        this.dragAreaClass = 'dragarea';\n        event.preventDefault();\n    }\n    @HostListener('drop', ['$event']) onDrop(event){\n        this.dragAreaClass = 'dragarea';\n        event.preventDefault();\n        event.stopPropagation();\n        var files = event.dataTransfer.files;\n        //this.saveFiles(files);\n    }\n    saveFiles(files){\n        this.errors = [];\n        if(files.length > 0 &&(!this.isValidFiles(files))){\n            this.uploadStatus.emit(false);\n            return;\n        }\n        if(files.length > 0){\n            var formData: FormData = new FormData();\n            formData.append(\"file\", files[0], files[0].name);\n            //formData.append(\"extraData\", localStorage.getItem('user'));\n\n            var parameters = {\n                userId: JSON.parse(localStorage.getItem('user'))\n            }\n            this.fileService.upload(formData, parameters)\n                .subscribe(data => {\n                    this.uploadStatus.emit(data.filename);\n                    \n                },\n                error => {\n                    this.uploadStatus.emit(false);\n                    this.errors.push(error.ExceptionMessage);\n                })\n        }\n    }\n    private isValidFiles(files){\n        if(files.length > this.maxFiles){\n            this.errors.push(\"Error: you exceeded the accepted number of uploaded files(\"+this.maxFiles+\")\");\n            return\n        }\n        //this.validFileExtensions(files);\n        return this.errors.length === 0;\n    }\n    /*private validFileExtensions(files){\n        var extensions = (this.fileExt.split(\",\"))\n                            .map((x) => {\n                                return x.toLocaleUpperCase().trim()\n                            });\n        for(var i = 0; i < files.length; i++){\n            var ext = files[i].name.toUpperCase().split('.').pop() ||Â files[i].name;\n            var exists = extensions.includes(ext);\n        }\n    }*/\n}\n"]}