{"version":3,"sources":["app/login/login.component.ts"],"names":[],"mappings":";;;;;;;;;;;AAAA,sCAAkD;AAClD,0CAAyD;AACzD,sCAA2C;AAE3C,4DAA0D;AAC1D,8EAA4E;AAC5E,0DAAwD;AAQxD;IAMI,wBACY,KAAqB,EACrB,MAAc,EACd,qBAA4C,EAC5C,YAA0B,EAC1B,WAAwB;QAJxB,UAAK,GAAL,KAAK,CAAgB;QACrB,WAAM,GAAN,MAAM,CAAQ;QACd,0BAAqB,GAArB,qBAAqB,CAAuB;QAC5C,iBAAY,GAAZ,YAAY,CAAc;QAC1B,gBAAW,GAAX,WAAW,CAAa;QAVpC,UAAK,GAAQ,EAAE,CAAC;QAChB,YAAO,GAAY,KAAK,CAAC;QAEzB,aAAQ,GAAW,IAAI,CAAC;IAQpB,CAAC;IACL,iCAAQ,GAAR;QACI,IAAI,CAAC,qBAAqB,CAAC,MAAM,EAAE,CAAC;QACpC,IAAI,CAAC,qBAAqB,CAAC,cAAc,EAAE,CAAC;IAChD,CAAC;IACD,8BAAK,GAAL;QAAA,iBAUC;QATG,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACpB,IAAI,CAAC,qBAAqB,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC;aACrE,SAAS,CAAC,UAAA,IAAI;YACX,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;YAClB,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC;QACzC,CAAC,EACD,UAAA,KAAK;YACD,KAAI,CAAC,QAAQ,GAAG,KAAK,CAAC,IAAI,EAAE,CAAC,GAAG,CAAC;QACrC,CAAC,CAAC,CAAA;IACV,CAAC;IA3BQ,cAAc;QAN1B,gBAAS,CAAC;YACP,QAAQ,EAAE,MAAM,CAAC,EAAE;YACnB,WAAW,EAAE,sBAAsB;YACnC,SAAS,EAAE,CAAE,iBAAU,CAAE;SAC5B,CAAC;yCASqB,uBAAc;YACb,eAAM;YACS,8CAAqB;YAC9B,4BAAY;YACb,0BAAW;OAX3B,cAAc,CA4B1B;IAAD,qBAAC;CA5BD,AA4BC,IAAA;AA5BY,wCAAc","file":"login.component.js","sourcesContent":["import { Component, OnInit } from \"@angular/core\";\nimport { Router, ActivatedRoute } from \"@angular/router\";\nimport { HttpModule } from \"@angular/http\";\n\nimport { AlertService } from \"../_services/alert.service\";\nimport { AuthenticationService } from \"../_services/authentication.service\";\nimport { UserService } from \"../_services/user.service\";\n\n@Component({\n    moduleId: module.id,\n    templateUrl: \"login.component.html\",\n    providers: [ HttpModule ]\n})\n\nexport class LoginComponent implements OnInit{\n    model: any = {};\n    loading: boolean = false;\n    returnUrl: string;\n    errorMsg: string = null;\n\n    constructor(\n        private route: ActivatedRoute,\n        private router: Router,\n        private authenticationService: AuthenticationService,\n        private alertService: AlertService,\n        private userService: UserService\n    ) { }\n    ngOnInit(){\n        this.authenticationService.logout();\n        this.authenticationService.destroySession();\n    }\n    login(){\n        this.loading = true;\n        this.authenticationService.login(this.model.username, this.model.password)\n            .subscribe(data  => {\n                console.log(data);\n                this.router.navigate(['/dashboard']);\n            },\n            error => {\n                this.errorMsg = error.json().err;\n            })\n    }\n}\n"]}