{"version":3,"sources":["app/_services/user.service.ts"],"names":[],"mappings":"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","file":"user.service.js","sourcesContent":["import { Injectable } from \"@angular/core\";\nimport { Http, Headers, RequestOptions, Response } from \"@angular/http\";\nimport { Subject } from \"rxjs/Subject\";\nimport { User } from \"../_models/user\";\n\n@Injectable()\nexport class UserService{\n    private username = new Subject<string>();\n    username$ = this.username.asObservable();\n\n    constructor(private http: Http) { }\n\n    getAll(){\n        return this.http.get('/api/getusers/', this.jwt()).map((response: Response) => response.json());\n    }\n    create(user: User){\n        return this.http.post('/api/users/', this.jwt()).map((response: Response) => response.json());\n    }\n    getById(userId: string){\n        return this.http.post('/api/byid', {id: userId}).map((response: Response) => response.json());\n    }\n    addUserToSession(data: string){\n        this.username.next(data);\n    }\n    getUserFiles(userId: string){\n        return this.http.post('/api/getuserfiles', {userId}).map((response: Response) => response.json());\n    }\n    getAllUserFiles(userId: string){\n        return this.http.post('/api/getalluserfiles', {userId}).map((response: Response) => response.json());\n    }\n    getUserLastFile(userId: string){\n        return this.http.post('/api/getlastfile', {userId}).map((response: Response) => response.json());\n    }\n    addUserLastFile(userId: string, lastFile: string){\n        return this.http.post('/api/addlastfile', {userId, lastFile}).map((response: Response) =>{\n            response.json();\n            console.log(response.json());\n        });\n    }\n    archiveUserFile(userId: string, filename: string, content: string){\n        return this.http.post('/api/savearchive', {userId, filename, content}).map((response: Response) => response.json());\n    }\n    getArchiveFiles(userId: string){\n        return this.http.post('/api/getuserarchives', {userId}).map((response: Response) => response.json());\n    }\n    getAllArchiveFiles(userId: string){\n        return this.http.post('/api/getalluserarchives', {userId}).map((response: Response) => response.json());\n    }\n    downloadArchive(fileName: string){\n        return this.http.post('/api/download', {fileName}).map((response: Response) => response.blob());\n    }\n    private jwt(){\n        let token = JSON.parse(localStorage.getItem('token'));\n\n        if(token){\n            let headers = new Headers({'Authorization': 'Bearer ' + token});\n            return new RequestOptions({ headers: headers });\n        }\n    }\n}\n"]}